Given an array of integers, check if it is possible to partition the array into some number of
subsequences of length k each, such that
- each element in the array occurs exactly one subsequence
- for each subsequence, all numbers are distinct, elements in the array having the same value must be in different subsequencces

If it is possible to partition the array into subsequences while satisying the above conditions, return "yes"
else return "no", a subsequence is formed by removing 6 (?) or more elements from the array without changing
the order of the elements that would remain. For example, the subsequences of [1,2,3] are [], [1], [2], [3], [1,2], [2,3], [1,3], [1,2,3]

Example:
k = 2
numbers = [1,2,3,4]

The array can be partitioned with elements [1,2] as the first subsequence, and elements [3,4] as the next subsequence. Therefore, return "yes"


Example 2
k = 3
numbers = [1,2,2,3]
There is no way to partition the array into subsequences such that all subsequences are length 3 and each element in the array occurs in exactly one subsequence. Therefore
return "No."

int k is an integer
in numbers[n]: an array of integers

Constraints:
1<= n <= 10 ^ 5
1 <= k <= n
1 <= numbers[i] <= 10^5